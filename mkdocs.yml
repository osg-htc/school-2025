site_name: OSG School 2025
site_url: https://osg-htc.org/school-2025/
repo_name: null
theme:
  name: material
  logo: assets/OSG_Logo.svg
  favicon: assets/OSG_Logo.png
  custom_dir: overrides
  icon:
    admonition:
      halt: material/hand-back-left
      pro-tip: material/brain

markdown_extensions:
  - attr_list
  - admonition
  - codehilite:
      guess_lang: False
  - meta
  - pymdownx.details
  - toc:
      permalink: True
  - footnotes
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
      options:
        custom_icons:
          - overrides/.icons
  - pymdownx.critic


extra_css:
  - stylesheets/code-highlight.css
  - stylesheets/osg.css

extra:
  social:
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/OSGSchool
      name: OSG School on Twitter

nav:
  - Home:                           index.md
  - Schedule:                       schedule.md
  - Logistics:
    - General information:          logistics/index.md
    - Hotel information:            logistics/hotel.md
    - Visa requirements:            logistics/visas.md
  - Materials:
    - Overview:                     materials/index.md
    - Intro to HTCondor:
      - Intro Exercises 1 - Running and Viewing Simple Jobs:
        - 1.1 - Log in and look around: materials/htcondor/part1-ex1-login.md
        - 1.2 - Experiment with HTCondor commands: materials/htcondor/part1-ex2-commands.md
        - 1.3 - Run jobs!:   materials/htcondor/part1-ex3-jobs.md
        - 1.4 - Read and interpret log files: materials/htcondor/part1-ex4-logs.md
        - 1.5 - Determine resource needs: materials/htcondor/part1-ex5-request.md
        - 1.6 - Remove jobs from the queue: materials/htcondor/part1-ex6-remove.md
      - Bonus Exercises - Job Attributes and Handling:
        - Bonus Exercise 1.7 - Explore condor_q: materials/htcondor/part1-ex7-queue.md
        - Bonus Exercise 1.8 - Explore condor_status: materials/htcondor/part1-ex8-status.md
      - Intro Exercises 2 - Running Many HTC Jobs:
        - 2.1 - Work with input and output files:  materials/htcondor/part2-ex1-files.md
        - 2.2 - Use queue N, $(Cluster), and $(Process): materials/htcondor/part2-ex2-queue-n.md
        - 2.3 - Use queue from with custom variables: materials/htcondor/part2-ex3-queue-from.md
        - Bonus Exercise 2.4 - Use queue matching with a custom variable: materials/htcondor/part2-ex4-queue-matching.md
    - OSG:
      - 1.1 - Log in to the OSPool Access Point: materials/osg/part1-ex1-login-scp.md
      - 1.2 - Running jobs in the OSPool: materials/osg/part1-ex2-submit-osg.md
      - 1.3 - Hardware differences between PATh and OSG: materials/osg/part1-ex3-hardware-diffs.md
      - 1.4 - Software differences in OSPool: materials/osg/part1-ex4-software-diffs.md
    - Troubleshooting Exercises:
      - 1.1 - Troubleshooting Jobs: materials/troubleshooting/part1-ex1-troubleshooting.md
      - 1.2 - Job Retry: materials/troubleshooting/part1-ex2-job-retry.md
    - Software Exercises:
      - Software Exercises 1 - Exploring Containers:
        - 1.1 - Run and Explore Apptainer Containers: materials/software/part1-ex1-run-apptainer.md
        - 1.2 - Use Apptainer Containers in OSPool Jobs: materials/software/part1-ex2-apptainer-jobs.md
        - 1.3 - Use Docker Containers in OSPool Jobs: materials/software/part1-ex3-docker-jobs.md
        - 1.4 - Build, Test, and Deploy an Apptainer Container: materials/software/part1-ex4-apptainer-build.md
        - 1.5 - Choose Software Options: materials/software/part1-ex5-pick-an-option.md
      - Software Exercises 2 - Preparing Scripts:
        - 2.1 - Build an HTC-Friendly Executable: materials/software/part2-ex1-build-executable.md
      - Software Exercises 3 -  Container Examples (Optional):
        - 3.1 - Create an Apptainer Definition Files: materials/software/part3-ex1-apptainer-recipes.md
        - 3.2 - Build Your Own Docker Container: materials/software/part3-ex2-docker-build.md
      - Software Exercises 4 - Exploring Compiled Software (Optional):
        - 4.1 - Download and Use Compiled Software: materials/software/part4-ex1-download.md
        - 4.2 - Use a Wrapper Script To Run Software: materials/software/part4-ex2-wrapper.md
        - 4.3 - Using Arguments With Wrapper Scripts: materials/software/part4-ex3-arguments.md
      - Software Exercises 5 - Compiled Software Examples (Optional):
        - 5.1 - Compiling a Research Software: materials/software/part5-ex1-prepackaged.md
        - 5.2 - Compiling Python and Running Jobs: materials/software/part5-ex2-python.md
        - 5.3 - Using Conda Environments: materials/software/part5-ex3-conda.md
        - 5.4 - Compiling and Running a Simple Code: materials/software/part5-ex4-compiling.md
    - Data Exercises:
      - Data Exercises 1 - HTCondor File Transfer:
        - 1.1 - Understanding a job's data needs: materials/data/part1-ex1-data-needs.md
        - 1.2 - transfer_input_files, transfer_output_files, and remaps: materials/data/part1-ex2-file-transfer.md
        - 1.3- Splitting input: materials/data/part1-ex3-blast-split.md
      - Data Exercises 2 - Using OSDF:
        - 2.1 - OSDF for inputs: materials/data/part2-ex1-osdf-inputs.md
        - 2.2 - OSDF for outputs: materials/data/part2-ex2-osdf-outputs.md
    - Scaling Up:
      - Scaling Up - Organizing and Testing
        - 1.1 - Organizing HTC workloads: materials/scaling/part1-ex1-organization.md
        - 1.2 - Composing Your Jobs: materials/scaling/part2-ex1-composing-the-job.md
      - Exploring Resources
        - 2.1 - Log Into a Local Pool: materials/scaling/part2-ex1-chtc-node.md
        - 2.2 - Hardware Differences Between OSPool and the CHTC Pool: materials/scaling/part2-ex2-hardware-diffs.md
        - 2.3 - Software Differences Between OSPool and the CHTC Pool: materials/scaling/part2-ex3-software-diffs.md
      - Exploring Jobs
        - 3.1 - Investigating Job Attributes: materials/scaling/part3-ex1-job-attributes.md
        - 3.2 - Getting Job Information from Log Files: materials/scaling/part3-ex2-log-files.md
    - DAGMan Exercises:
      - 1.1 - A simple DAG: materials/workflows/part1-ex1-simple-dag.md
      - 1.2 - A brief detour through the Mandelbrot set: materials/workflows/part1-ex2-mandelbrot.md
      - 1.3 - A more complex DAG: materials/workflows/part1-ex3-complex-dag.md
      - 1.4 - Handling jobs that fail with DAGMan: materials/workflows/part1-ex4-failed-dag.md
      - 1.5  - Workflow Challenges: materials/workflows/part1-ex5-challenges.md
    - Self-checkpointing:
      - 1.1 - Trying out self-checkpointing: materials/checkpoint/part1-ex1-checkpointing.md
    - Special Environments:
      - 1.1 - GPUs: materials/special/part1-ex1-gpus.md
